# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  batch: true
  branches:
    include:
      - master
      - dev

pr:
  autoCancel: true
  branches:
    include:
      - '*'

resources:
  - repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '14b37450-0a4a-44eb-8959-c1fb58bca9c0'
  frontendImageRepository: '4um/4um-frontend'
  backendImageRepository: '4um/4um-backend'
  containerRegistry: '4umregistry.azurecr.io'
  mavenPomPath: 'pom.xml'
  buildReason: '$(Build.Reason)'
  sourceBranch: '$(Build.SourceBranchName)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'


stages:
  - stage: build_and_deploy
    displayName: Build source code and deploy to ACR
    jobs:
      - job: build_test_and_deploy
        displayName: Build source code and deploy to ACR
        timeoutInMinutes: 30
        pool:
          vmImage: $(vmImageName)
        steps:

          - task: NodeTool@0
            inputs:
              versionSpec: '16.14.2'
          - script:  |
              npm install -g @angular/cli

          - task: PowerShell@2
            displayName: Set profile variable for maven build
            inputs:
              targetType: inline
              script: |
                if ($Env:BUILD_SOURCEBRANCHNAME -eq "master")
                {
                    $mvnGmVersionOption=''
                    Write-Host "##vso[task.setvariable variable=profile]$mvnGmVersionOption"
                }
                else {
                    $mvnGmVersionOption='-SNAPSHOT'
                    Write-Host "##vso[task.setvariable variable=profile]$mvnGmVersionOption"
                }

          - task: Maven@3
            inputs:
              mavenPomFile: $(mavenPomPath)
              mavenOptions: '-Xmx3072m'
              options: -B -Dproject.docker.registry=$(containerRegistry) -Dchangelist=$(profile)
              javaHomeOption: 'JDKVersion'
              jdkVersionOption: '1.11'
              jdkArchitectureOption: 'x64'
              publishJUnitResults: true
              testResultsFiles: '**/TEST-*.xml'
              goals: 'package'

          - task: PowerShell@2
            displayName: Read tag from pom.xml
            name: readTag
            condition: and(succeeded(), ne(variables.buildReason, 'PullRequest'))
            inputs:
              targetType: 'inline'
              script: |
                [xml]$pomXml = Get-Content .\pom.xml
                # version:
                Write-Host $pomXml.project.properties.revision
                $version=$pomXml.project.properties.revision
                $snapshot=$version+$pomXml.project.properties.changelist
                Write-Host "##vso[task.setvariable variable=version]$version"
                Write-Host "##vso[task.setvariable variable=snapshot]$snapshot"

          - task: Docker@2
            condition: and(succeeded(), ne(variables.buildReason, 'PullRequest'))
            displayName: Log into ACR
            inputs:
              command: login
              containerRegistry: $(dockerRegistryServiceConnection)

          - task: Docker@2
            displayName: Push snapshot image 4um backend
            condition: and(succeeded(), eq(variables.sourceBranch, 'dev'))
            inputs:
              containerRegistry: $(dockerRegistryServiceConnection)
              repository: $(backendImageRepository)
              command: push
              tags: |
                $(snapshot)
                latest

          - task: Docker@2
            condition: and(succeeded(), eq(variables.sourceBranch, 'dev'))
            displayName: Push snapshot image 4um frontend
            inputs:
              containerRegistry: $(dockerRegistryServiceConnection)
              repository: $(frontendImageRepository)
              command: push
              tags: |
                $(snapshot)
                latest

          - task: Docker@2
            condition: and(succeeded(), eq(variables.sourceBranch, 'master'))
            displayName: Push versioned image 4um backend
            inputs:
              containerRegistry: $(dockerRegistryServiceConnection)
              repository: $(backendImageRepository)
              command: push
              tags: $(version)

          - task: Docker@2
            condition: and(succeeded(), eq(variables.sourceBranch, 'master'))
            displayName: Push versioned image 4um frontend
            inputs:
              containerRegistry: $(dockerRegistryServiceConnection)
              repository: $(frontendImageRepository)
              command: push
              tags: $(version)

          - task: Docker@2
            displayName: Logout of ACR
            condition: and(succeeded(), ne(variables.buildReason, 'PullRequest'))
            inputs:
              command: logout
              containerRegistry: $(dockerRegistryServiceConnection)

          - task: GitHubRelease@0
            displayName: Set release tag on Github repository
            condition: and(succeeded(), eq(variables.sourceBranch, 'master'))
            inputs:
              gitHubConnection: 'BoardyB'
              repositoryName: '$(Build.Repository.Name)'
              tag: '$(version)'
              assetUploadMode: replace
              tagSource: manual
              action: create
